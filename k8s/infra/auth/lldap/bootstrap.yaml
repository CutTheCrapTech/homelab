apiVersion: batch/v1
kind: Job
metadata:
  name: lldap-bootstrap
  namespace: lldap
  annotations:
    argocd.argoproj.io/hook: PostSync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
spec:
  template:
    spec:
      restartPolicy: OnFailure
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 1001
        fsGroup: 1001
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: lldap-bootstrap
          image: ghcr.io/lldap/lldap:v0.6.1-alpine-rootless # renovate: docker=ghcr.io/lldap/lldap
          command: [ /app/bootstrap.sh ]
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop: [ ALL ]
          envFrom:
            - configMapRef:
                name: common-env
            - configMapRef:
                name: bootstrap-env
          env:
            - name: LLDAP_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: lldap-credentials
                  key: LLDAP_LDAP_USER_PASS
          volumeMounts:
            - name: users
              mountPath: /bootstrap/user-configs
              readOnly: true
            - name: groups
              mountPath: /bootstrap/group-configs
              readOnly: true
      volumes:
        - name: users
          projected:
            sources:
              - secret:
                  name: lldap-config
                  items:
                    - key: users.json
                      path: users.json
              - configMap:
                  name: users
                  items:
                    - key: test.json
                      path: test.json
        - name: groups
          projected:
            sources:
              - secret:
                  name: lldap-config
                  items:
                    - key: groups.json
                      path: groups.json
